definitions:
  models.Order:
    properties:
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.OrderCreateRequest:
    properties:
      couponCode:
        type: string
      items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
    type: object
  models.OrderItem:
    properties:
      productId:
        type: string
      quantity:
        type: integer
    type: object
  models.Product:
    properties:
      category:
        description: Product category
        type: string
      id:
        description: Unique identifier for the product
        type: string
      name:
        description: Product name
        type: string
      price:
        description: Product price
        type: number
    type: object
  service.ProductResponse:
    properties:
      category:
        example: Waffle
        type: string
      id:
        example: "10"
        type: string
      name:
        example: Chicken Waffle
        type: string
      price:
        example: 1
        type: number
    type: object
host: localhost:8080
info:
  contact:
    email: biswas.rajesh63@gmail.com
    name: Rajesh Kumar Biswas
    url: https://github.com/Raj63
  description: Documentation's Order Food Online
  termsOfService: http://swagger.io/terms/
  title: Order Food Online
  version: "2.0"
paths:
  /api/product:
    get:
      description: Get all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ProductResponse'
            type: array
        "500":
          description: error":"failed to fetch products
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List products
      tags:
      - product
  /api/product/{productId}:
    get:
      description: Get a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ProductResponse'
        "400":
          description: error":"productId is required
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: error":"product not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error":"failed to fetch product
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get product by ID
      tags:
      - product
  /order:
    post:
      consumes:
      - application/json
      description: Place a new order
      parameters:
      - description: Order request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.OrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: error":"no items in order
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: error":"product not found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: error":"invalid coupon code
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error":"failed to place order
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Place an order
      tags:
      - order
securityDefinitions:
  ApiKeyAuth:
    description: Provide your API key as the value of the 'api_key' header to authenticate
    in: header
    name: api_key
    type: apiKey
swagger: "2.0"
